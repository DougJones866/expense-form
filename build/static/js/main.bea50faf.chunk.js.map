{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","useState","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bea50faf.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\n\r\nconst ExpenseDate = (props) => {\r\n\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ExpenseDate;","import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n    const [title, ] = useState(props.title);\r\n\r\n\r\n    // const clickHandler = () => {\r\n    //     setTitle('Updated');\r\n    // }\r\n\r\n\r\n    return (\r\n        <li>\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date} />\r\n            <div className=\"expense-item__description\">\r\n                <h2>{title}</h2>\r\n                <div className=\"expense-item__price\">${props.amount}</div>\r\n            </div>\r\n            {/* <button onClick={clickHandler}>Change Title</button> */}\r\n        </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\n    \r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\r\n    }\r\n    \r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map((expense) => (<ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title} amount={expense.amount} date={expense.date} />))};\r\n</ul>\r\n\r\n}\r\nexport default ExpensesList","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (<div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div> \r\n    );\r\n\r\n}\r\n\r\nexport default ChartBar","import './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = props => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return <div className='chart'>\r\n        {props.dataPoints.map(dataPoint => <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label}/>)}\r\n    </div>\r\n\r\n};\r\n\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value : 0},\r\n        { label: 'Feb', value : 0},\r\n        { label: 'Mar', value : 0},\r\n        { label: 'Apr', value : 0},\r\n        { label: 'May', value : 0},\r\n        { label: 'Jun', value : 0},\r\n        { label: 'Jul', value : 0},\r\n        { label: 'Aug', value : 0},\r\n        { label: 'Sep', value : 0},\r\n        { label: 'Oct', value : 0},\r\n        { label: 'Nov', value : 0},\r\n        { label: 'Dec', value : 0},\r\n\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); \r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n\r\n}\r\n\r\nexport default ExpensesChart;","\r\nimport { useState } from 'react';\r\nimport ExpensesList from './ExpensesList';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear)\r\n    }\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n\r\n    \r\n   \r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n                <ExpensesChart expenses={filteredExpenses}/>\r\n                <ExpensesList items={filteredExpenses} />\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        }\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n\r\n    };\r\n\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n            </div>\r\n\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n            <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default ExpenseForm","import {\r\n    useState\r\n} from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const onSaveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (<div className=\"new-expense\" > {\r\n        !isEditing && <button onClick={\r\n            startEditingHandler\r\n        } > Add New Expense </button>} {\r\n                isEditing && < ExpenseForm onSaveExpenseData={\r\n                    onSaveExpenseDataHandler\r\n                }\r\n                    onCancel={\r\n                        stopEditingHandler\r\n                    }\r\n                />} </div>\r\n            );\r\n                };\r\n\r\n\r\n            export default NewExpense;","import { useState } from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}